// Generated by Dagger (https://dagger.dev).
package com.suleymancelik.github.core.module;

import android.content.SharedPreferences;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SharedPreferencesModule_ProvideSharedPreferenceEditorFactory implements Factory<SharedPreferences.Editor> {
  private final SharedPreferencesModule module;

  private final Provider<SharedPreferences> sharedPreferencesProvider;

  public SharedPreferencesModule_ProvideSharedPreferenceEditorFactory(
      SharedPreferencesModule module, Provider<SharedPreferences> sharedPreferencesProvider) {
    this.module = module;
    this.sharedPreferencesProvider = sharedPreferencesProvider;
  }

  @Override
  public SharedPreferences.Editor get() {
    return provideSharedPreferenceEditor(module, sharedPreferencesProvider.get());
  }

  public static SharedPreferencesModule_ProvideSharedPreferenceEditorFactory create(
      SharedPreferencesModule module, Provider<SharedPreferences> sharedPreferencesProvider) {
    return new SharedPreferencesModule_ProvideSharedPreferenceEditorFactory(module, sharedPreferencesProvider);
  }

  public static SharedPreferences.Editor provideSharedPreferenceEditor(
      SharedPreferencesModule instance, SharedPreferences sharedPreferences) {
    return Preconditions.checkNotNull(instance.provideSharedPreferenceEditor(sharedPreferences), "Cannot return null from a non-@Nullable @Provides method");
  }
}
