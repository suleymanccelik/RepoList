// Generated by view binder compiler. Do not edit!
package com.suleymancelik.github.ui.list.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.card.MaterialCardView;
import com.suleymancelik.github.ui.list.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemRepoListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialCardView cardView;

  @NonNull
  public final ImageView itemImageLovedNo;

  @NonNull
  public final ImageView itemImageLovedYes;

  @NonNull
  public final ConstraintLayout serviceOperationContainer;

  @NonNull
  public final AppCompatTextView txtRepoName;

  @NonNull
  public final AppCompatTextView txtRepoStarCount;

  private ItemRepoListBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialCardView cardView, @NonNull ImageView itemImageLovedNo,
      @NonNull ImageView itemImageLovedYes, @NonNull ConstraintLayout serviceOperationContainer,
      @NonNull AppCompatTextView txtRepoName, @NonNull AppCompatTextView txtRepoStarCount) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.itemImageLovedNo = itemImageLovedNo;
    this.itemImageLovedYes = itemImageLovedYes;
    this.serviceOperationContainer = serviceOperationContainer;
    this.txtRepoName = txtRepoName;
    this.txtRepoStarCount = txtRepoStarCount;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRepoListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRepoListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_repo_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRepoListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_view;
      MaterialCardView cardView = rootView.findViewById(id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.item_image_loved_no;
      ImageView itemImageLovedNo = rootView.findViewById(id);
      if (itemImageLovedNo == null) {
        break missingId;
      }

      id = R.id.item_image_loved_yes;
      ImageView itemImageLovedYes = rootView.findViewById(id);
      if (itemImageLovedYes == null) {
        break missingId;
      }

      id = R.id.service_operation_container;
      ConstraintLayout serviceOperationContainer = rootView.findViewById(id);
      if (serviceOperationContainer == null) {
        break missingId;
      }

      id = R.id.txt_repo_name;
      AppCompatTextView txtRepoName = rootView.findViewById(id);
      if (txtRepoName == null) {
        break missingId;
      }

      id = R.id.txt_repo_star_count;
      AppCompatTextView txtRepoStarCount = rootView.findViewById(id);
      if (txtRepoStarCount == null) {
        break missingId;
      }

      return new ItemRepoListBinding((ConstraintLayout) rootView, cardView, itemImageLovedNo,
          itemImageLovedYes, serviceOperationContainer, txtRepoName, txtRepoStarCount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
