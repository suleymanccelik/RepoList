// Generated by Dagger (https://dagger.dev).
package com.suleymancelik.github.ui.list.ui;

import com.suleymancelik.github.core.helper.NetworkHelper;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import retrofit2.Retrofit;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepoListRepository_MembersInjector implements MembersInjector<RepoListRepository> {
  private final Provider<Retrofit> mApiClientProvider;

  private final Provider<NetworkHelper> mNetworkHelperProvider;

  public RepoListRepository_MembersInjector(Provider<Retrofit> mApiClientProvider,
      Provider<NetworkHelper> mNetworkHelperProvider) {
    this.mApiClientProvider = mApiClientProvider;
    this.mNetworkHelperProvider = mNetworkHelperProvider;
  }

  public static MembersInjector<RepoListRepository> create(Provider<Retrofit> mApiClientProvider,
      Provider<NetworkHelper> mNetworkHelperProvider) {
    return new RepoListRepository_MembersInjector(mApiClientProvider, mNetworkHelperProvider);}

  @Override
  public void injectMembers(RepoListRepository instance) {
    injectMApiClient(instance, mApiClientProvider.get());
    injectMNetworkHelper(instance, mNetworkHelperProvider.get());
  }

  @InjectedFieldSignature("com.suleymancelik.github.ui.list.ui.RepoListRepository.mApiClient")
  public static void injectMApiClient(RepoListRepository instance, Retrofit mApiClient) {
    instance.mApiClient = mApiClient;
  }

  @InjectedFieldSignature("com.suleymancelik.github.ui.list.ui.RepoListRepository.mNetworkHelper")
  public static void injectMNetworkHelper(RepoListRepository instance,
      NetworkHelper mNetworkHelper) {
    instance.mNetworkHelper = mNetworkHelper;
  }
}
