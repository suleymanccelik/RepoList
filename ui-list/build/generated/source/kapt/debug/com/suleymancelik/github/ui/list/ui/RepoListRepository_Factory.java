// Generated by Dagger (https://dagger.dev).
package com.suleymancelik.github.ui.list.ui;

import com.suleymancelik.github.core.helper.NetworkHelper;
import dagger.internal.Factory;
import javax.inject.Provider;
import retrofit2.Retrofit;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepoListRepository_Factory implements Factory<RepoListRepository> {
  private final Provider<Retrofit> mApiClientProvider;

  private final Provider<NetworkHelper> mNetworkHelperProvider;

  public RepoListRepository_Factory(Provider<Retrofit> mApiClientProvider,
      Provider<NetworkHelper> mNetworkHelperProvider) {
    this.mApiClientProvider = mApiClientProvider;
    this.mNetworkHelperProvider = mNetworkHelperProvider;
  }

  @Override
  public RepoListRepository get() {
    RepoListRepository instance = newInstance();
    RepoListRepository_MembersInjector.injectMApiClient(instance, mApiClientProvider.get());
    RepoListRepository_MembersInjector.injectMNetworkHelper(instance, mNetworkHelperProvider.get());
    return instance;
  }

  public static RepoListRepository_Factory create(Provider<Retrofit> mApiClientProvider,
      Provider<NetworkHelper> mNetworkHelperProvider) {
    return new RepoListRepository_Factory(mApiClientProvider, mNetworkHelperProvider);
  }

  public static RepoListRepository newInstance() {
    return new RepoListRepository();
  }
}
